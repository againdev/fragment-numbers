{"version":3,"file":"static/js/221.4aae891a.chunk.js","mappings":"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","sources":["../../../packages/uikit/dist/components/transfer/nft/Common.js","../../../packages/uikit/dist/components/transfer/nft/ConfirmNftView.js","../../../packages/uikit/dist/components/transfer/nft/SendNftNotification.js","../../../packages/uikit/dist/components/transfer/nft/hooks.js","../../../packages/uikit/node_modules/react-transition-group/esm/utils/ChildMapping.js","../../../packages/uikit/node_modules/react-transition-group/esm/TransitionGroup.js","../../../packages/uikit/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js"],"sourcesContent":["import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { formatAddress, toShortValue } from '@tonkeeper/core/dist/utils/common';\nimport { useAppSdk } from '../../../hooks/appSdk';\nimport { useTranslation } from '../../../hooks/translation';\nimport { ChevronLeftIcon } from '../../Icon';\nimport { ListBlock, ListItem, ListItemPayload } from '../../List';\nimport { NotificationCancelButton, NotificationTitleBlock } from '../../Notification';\nimport { Label1 } from '../../Text';\nimport { RoundedButton } from '../../fields/RoundedButton';\nimport { Label } from '../common';\nimport { useActiveTonNetwork } from '../../../state/wallet';\nexport const ConfirmHeaderBlock = ({ onBack, onClose }) => {\n    return (_jsxs(NotificationTitleBlock, { children: [_jsx(RoundedButton, { onClick: onBack, children: _jsx(ChevronLeftIcon, {}) }), _jsx(NotificationCancelButton, { handleClose: onClose })] }));\n};\nexport const NftDetailsBlock = ({ nftItem }) => {\n    const { t } = useTranslation();\n    const sdk = useAppSdk();\n    const network = useActiveTonNetwork();\n    return (_jsxs(ListBlock, { fullWidth: true, children: [nftItem.collection && (_jsx(ListItem, { onClick: () => sdk.copyToClipboard(formatAddress(nftItem.collection.address, network, true)), children: _jsxs(ListItemPayload, { children: [_jsx(Label, { children: t('NFT_collection_id') }), _jsx(Label1, { children: toShortValue(formatAddress(nftItem.collection.address, network, true)) })] }) })), _jsx(ListItem, { onClick: () => sdk.copyToClipboard(formatAddress(nftItem.address, network, true)), children: _jsxs(ListItemPayload, { children: [_jsx(Label, { children: t('NFT_item_id') }), _jsx(Label1, { children: toShortValue(formatAddress(nftItem.address, network, true)) })] }) })] }));\n};\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\nimport { estimateMultisigNFTTransfer, estimateNftTransfer, sendMultisigNFTTransfer, sendNftTransfer } from '@tonkeeper/core/dist/service/transfer/nftService';\nimport { MultisigApi } from '@tonkeeper/core/dist/tonApiV2';\nimport { useState } from 'react';\nimport { useAppContext } from '../../../hooks/appContext';\nimport { useAppSdk } from '../../../hooks/appSdk';\nimport { useTranslation } from '../../../hooks/translation';\nimport { Gap } from '../../Layout';\nimport { ListBlock } from '../../List';\nimport { FullHeightBlock } from '../../Notification';\nimport { notifyError } from '../common';\nimport { AssetAmount } from '@tonkeeper/core/dist/entries/crypto/asset/asset-amount';\nimport { TON_ASSET } from '@tonkeeper/core/dist/entries/crypto/asset/constants';\nimport { useTransactionAnalytics } from '../../../hooks/amplitude';\nimport { QueryKey } from '../../../libs/queryKey';\nimport { getSigner } from '../../../state/mnemonic';\nimport { useCheckTouchId } from '../../../state/password';\nimport { Image, ImageMock, Info, SendingTitle, Title } from '../Confirm';\nimport { ConfirmViewContext, ConfirmViewDetailsComment, ConfirmViewDetailsFee, ConfirmViewDetailsRecipient } from '../ConfirmView';\nimport { NftDetailsBlock } from './Common';\nimport { useAccountsState, useActiveAccount, useInvalidateActiveWalletQueries } from '../../../state/wallet';\nimport { getMultisigSignerInfo, useActiveMultisigAccountHost, useActiveMultisigWalletInfo, useIsActiveAccountMultisig } from '../../../state/multisig';\nimport { MultisigTransferDetails } from '../multisig/MultisigTransferDetails';\nimport { styled } from 'styled-components';\nconst assetAmount = new AssetAmount({\n    asset: TON_ASSET,\n    weiAmount: 0\n});\nconst useNftTransferEstimation = (nftItem, data) => {\n    const { t } = useTranslation();\n    const sdk = useAppSdk();\n    const { api } = useAppContext();\n    const account = useActiveAccount();\n    const accounts = useAccountsState();\n    const client = useQueryClient();\n    let signerWallet = null;\n    if (account.type === 'ton-multisig') {\n        signerWallet = getMultisigSignerInfo(accounts, account).signerWallet;\n    }\n    return useQuery([QueryKey.estimate, data?.address, accounts, signerWallet], async () => {\n        try {\n            if (account.type === 'watch-only') {\n                throw new Error('account not controllable');\n            }\n            let payload;\n            if (account.type === 'ton-multisig') {\n                let multisig = client.getQueryData([\n                    QueryKey.multisigWallet,\n                    account.activeTonWallet.rawAddress\n                ]);\n                if (!multisig) {\n                    multisig = await new MultisigApi(api.tonApiV2).getMultisigAccount({\n                        accountId: account.activeTonWallet.rawAddress\n                    });\n                }\n                payload = await estimateMultisigNFTTransfer({\n                    api,\n                    multisig,\n                    hostWallet: signerWallet,\n                    recipient: data,\n                    nftAddress: nftItem.address\n                });\n            }\n            else {\n                payload = await estimateNftTransfer(api, account.activeTonWallet, data, nftItem);\n            }\n            const fee = new AssetAmount({\n                asset: TON_ASSET,\n                weiAmount: payload.event.extra * -1\n            });\n            return { fee, payload };\n        }\n        catch (e) {\n            await notifyError(client, sdk, t, e);\n            throw e;\n        }\n    }, { enabled: data != null });\n};\nconst useSendNft = (recipient, nftItem, fee, options) => {\n    const { t } = useTranslation();\n    const sdk = useAppSdk();\n    const { api } = useAppContext();\n    const account = useActiveAccount();\n    const client = useQueryClient();\n    const track2 = useTransactionAnalytics();\n    const accounts = useAccountsState();\n    const { mutateAsync: checkTouchId } = useCheckTouchId();\n    const { mutateAsync: invalidateAccountQueries } = useInvalidateActiveWalletQueries();\n    return useMutation(async () => {\n        if (account.type === 'watch-only') {\n            console.error(\"Can't send a transfer using this account\");\n            return false;\n        }\n        if (!fee)\n            return false;\n        track2('send-nft');\n        try {\n            if (account.type === 'ton-multisig') {\n                let multisig = client.getQueryData([\n                    QueryKey.multisigWallet,\n                    account.activeTonWallet.rawAddress\n                ]);\n                if (!multisig) {\n                    multisig = await new MultisigApi(api.tonApiV2).getMultisigAccount({\n                        accountId: account.activeTonWallet.rawAddress\n                    });\n                }\n                const { signerWallet, signerAccount } = getMultisigSignerInfo(accounts, account);\n                const signer = await getSigner(sdk, signerAccount.id, checkTouchId, {\n                    walletId: signerWallet.id\n                }).catch(() => null);\n                if (!signer) {\n                    throw new Error('Signer not found');\n                }\n                if (!options?.multisigTTL) {\n                    throw new Error('TTL is required');\n                }\n                await sendMultisigNFTTransfer({\n                    api,\n                    hostWallet: signerWallet,\n                    multisig,\n                    recipient,\n                    nftAddress: nftItem.address,\n                    fee,\n                    signer,\n                    ttlSeconds: 60 * Number(options.multisigTTL)\n                });\n            }\n            else {\n                const signer = await getSigner(sdk, account.id, checkTouchId).catch(() => null);\n                if (signer === null)\n                    return false;\n                await sendNftTransfer(api, account, recipient, nftItem, fee, signer);\n            }\n        }\n        catch (e) {\n            await notifyError(client, sdk, t, e);\n        }\n        await invalidateAccountQueries();\n        return true;\n    });\n};\nexport const ConfirmNftView = ({ recipient, onClose, nftItem, headerBlock, mainButton, multisigTTL }) => {\n    const { standalone } = useAppContext();\n    const [done, setDone] = useState(false);\n    const { t } = useTranslation();\n    const isActiveMultisig = useIsActiveAccountMultisig();\n    const estimation = useNftTransferEstimation(nftItem, recipient);\n    const { mutateAsync, isLoading, error, reset } = useSendNft(recipient, nftItem, estimation.data?.payload, { multisigTTL });\n    const image = nftItem.previews?.find(item => item.resolution === '100x100');\n    const handleSubmit = async () => {\n        if (isLoading)\n            return false;\n        try {\n            reset();\n            const isDone = await mutateAsync();\n            if (isDone) {\n                setDone(true);\n                setTimeout(onClose, 2000);\n            }\n            return isDone;\n        }\n        catch (err) {\n            console.error(err);\n            return false;\n        }\n    };\n    const onSubmit = async (e) => {\n        e.stopPropagation();\n        e.preventDefault();\n        handleSubmit();\n    };\n    return (_jsx(ConfirmViewContext.Provider, { value: {\n            recipient,\n            assetAmount,\n            estimation,\n            formState: { done, isLoading, error },\n            onClose: () => onClose(),\n            onBack: () => { },\n            handleSubmit\n        }, children: _jsxs(FullHeightBlock, { onSubmit: onSubmit, standalone: standalone, children: [headerBlock, _jsxs(Info, { children: [image ? _jsx(Image, { src: image.url }) : _jsx(ImageMock, {}), _jsx(SendingTitle, { children: nftItem.dns ?? nftItem.metadata.name }), _jsx(Title, { children: t('txActions_signRaw_types_nftItemTransfer') })] }), _jsxs(ListBlock, { margin: false, fullWidth: true, children: [_jsx(ConfirmViewDetailsRecipient, {}), _jsx(ConfirmViewDetailsFee, {}), _jsx(ConfirmViewDetailsComment, {})] }), _jsx(NftDetailsBlock, { nftItem: nftItem }), _jsx(Gap, {}), isActiveMultisig && multisigTTL ? (_jsx(MayBeMultisigDetalis, { ttl: multisigTTL })) : null, mainButton] }) }));\n};\nconst MultisigTransferDetailsStyled = styled(MultisigTransferDetails) `\n    margin-bottom: 1rem;\n`;\nconst MayBeMultisigDetalis = ({ ttl }) => {\n    const { data: multisigInfo } = useActiveMultisigWalletInfo();\n    const { signerWallet } = useActiveMultisigAccountHost();\n    if (!multisigInfo) {\n        return null;\n    }\n    return (_jsx(MultisigTransferDetailsStyled, { status: \"progress\", signedWallets: [], threshold: multisigInfo.threshold, pendingWallets: multisigInfo.signers, hostAddress: signerWallet.rawAddress, secondsLeft: Number(ttl) * 60 }));\n};\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { BLOCKCHAIN_NAME } from '@tonkeeper/core/dist/entries/crypto';\nimport { parseTonTransferWithAddress } from '@tonkeeper/core/dist/service/deeplinkingService';\nimport { useCallback, useEffect, useRef, useState } from 'react';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { useAppContext } from '../../../hooks/appContext';\nimport { useAppSdk } from '../../../hooks/appSdk';\nimport { useTranslation } from '../../../hooks/translation';\nimport { Notification } from '../../Notification';\nimport { ConfirmViewButtons } from '../ConfirmView';\nimport { RecipientView, useGetToAccount } from '../RecipientView';\nimport { ConfirmMainButton, MainButton, RecipientHeaderBlock, Wrapper, childFactoryCreator, duration, TransferViewHeaderBlock } from '../common';\nimport { ConfirmHeaderBlock } from './Common';\nimport { ConfirmNftView } from './ConfirmNftView';\nimport { useMinimalBalance } from './hooks';\nimport { MultisigOrderFormView } from '../MultisigOrderFormView';\nimport { useIsActiveAccountMultisig } from '../../../state/multisig';\nconst SendContent = ({ nftItem, onClose }) => {\n    const sdk = useAppSdk();\n    const { t } = useTranslation();\n    const { standalone, extension } = useAppContext();\n    const multisigSettingsRef = useRef(null);\n    const recipientRef = useRef(null);\n    const confirmRef = useRef(null);\n    const [right, setRight] = useState(true);\n    const [recipient, setRecipient] = useState();\n    const isMultisig = useIsActiveAccountMultisig();\n    const { mutateAsync: getAccountAsync } = useGetToAccount();\n    const { mutateAsync: checkBalanceAsync, isLoading: isChecking } = useMinimalBalance();\n    const onRecipient = async (data) => {\n        await checkBalanceAsync();\n        setRight(true);\n        setRecipient(data);\n        setView('confirm');\n    };\n    const backToRecipient = useCallback(() => {\n        setRight(false);\n        setRecipient(value => (value ? { ...value, done: false } : undefined));\n        setView('recipient');\n    }, [setRecipient]);\n    const [multisigTimeout, setMultisigTimeout] = useState();\n    const [view, setView] = useState(isMultisig ? 'multisig-settings' : 'recipient');\n    const processRecipient = useCallback(async ({ address }) => {\n        const item = { address: address };\n        const toAccount = await getAccountAsync(item);\n        onRecipient({\n            address: { ...item, blockchain: BLOCKCHAIN_NAME.TON },\n            toAccount,\n            comment: '',\n            done: true\n        });\n    }, [onRecipient, getAccountAsync]);\n    const onScan = async (signature) => {\n        const param = parseTonTransferWithAddress({ url: signature });\n        if (param === null) {\n            return sdk.uiEvents.emit('copy', {\n                method: 'copy',\n                params: t('Unexpected_QR_Code')\n            });\n        }\n        else {\n            await processRecipient(param);\n        }\n    };\n    const nodeRef = {\n        'multisig-settings': multisigSettingsRef,\n        recipient: recipientRef,\n        confirm: confirmRef\n    }[view];\n    return (_jsx(Wrapper, { standalone: standalone, extension: extension, children: _jsx(TransitionGroup, { childFactory: childFactoryCreator(right), children: _jsx(CSSTransition, { nodeRef: nodeRef, classNames: \"right-to-left\", addEndListener: done => {\n                    setTimeout(done, duration);\n                }, children: status => (_jsxs(\"div\", { ref: nodeRef, children: [view === 'multisig-settings' && (_jsx(MultisigOrderFormView, { onSubmit: val => {\n                                setRight(true);\n                                setMultisigTimeout(val.lifetime);\n                                setView('recipient');\n                            }, isAnimationProcess: status === 'exiting', Header: () => (_jsx(TransferViewHeaderBlock, { title: t('multisig_create_order_title'), onClose: onClose })), MainButton: MainButton })), view === 'recipient' && (_jsx(RecipientView, { data: recipient, setRecipient: onRecipient, onScan: onScan, isExternalLoading: isChecking, acceptBlockchains: [BLOCKCHAIN_NAME.TON], MainButton: MainButton, HeaderBlock: () => (_jsx(RecipientHeaderBlock, { title: t('nft_transfer_title'), onClose: onClose, onBack: isMultisig ? backToRecipient : undefined })) })), view === 'confirm' && (_jsx(ConfirmNftView, { onClose: onClose, recipient: recipient, nftItem: nftItem, mainButton: _jsx(ConfirmViewButtons, { MainButton: ConfirmMainButton }), headerBlock: _jsx(ConfirmHeaderBlock, { onBack: backToRecipient, onClose: onClose }), multisigTTL: multisigTimeout }))] })) }, view) }) }));\n};\nconst SendNftNotification = () => {\n    const sdk = useAppSdk();\n    const [nftItem, setNft] = useState();\n    const onClose = useCallback(() => {\n        setNft(undefined);\n    }, [setNft]);\n    useEffect(() => {\n        const handler = (options) => {\n            setNft(options.params);\n        };\n        sdk.uiEvents.on('transferNft', handler);\n        return () => {\n            sdk.uiEvents.off('transferNft', handler);\n        };\n    }, []);\n    const Content = useCallback(() => {\n        if (!nftItem)\n            return undefined;\n        return _jsx(SendContent, { onClose: onClose, nftItem: nftItem });\n    }, [nftItem, onClose]);\n    return (_jsx(Notification, { isOpen: !!nftItem, handleClose: onClose, hideButton: true, backShadow: true, children: Content }));\n};\nexport default SendNftNotification;\n","import { useMutation, useQueryClient } from '@tanstack/react-query';\nimport { checkWalletPositiveBalanceOrDie } from '@tonkeeper/core/dist/service/transfer/common';\nimport { AccountsApi } from '@tonkeeper/core/dist/tonApiV2';\nimport { useAppContext } from '../../../hooks/appContext';\nimport { useAppSdk } from '../../../hooks/appSdk';\nimport { useTranslation } from '../../../hooks/translation';\nimport { notifyError } from '../common';\nimport { useActiveWallet } from '../../../state/wallet';\nexport const useMinimalBalance = () => {\n    const sdk = useAppSdk();\n    const { api } = useAppContext();\n    const walletState = useActiveWallet();\n    const { t } = useTranslation();\n    const client = useQueryClient();\n    return useMutation(async () => {\n        const wallet = await new AccountsApi(api.tonApiV2).getAccount({\n            accountId: walletState.rawAddress\n        });\n        try {\n            checkWalletPositiveBalanceOrDie(wallet);\n        }\n        catch (e) {\n            await notifyError(client, sdk, t, e);\n        }\n    });\n};\n","import { Children, cloneElement, isValidElement } from 'react';\n/**\n * Given `this.props.children`, return an object mapping key to child.\n *\n * @param {*} children `this.props.children`\n * @return {object} Mapping of key to child\n */\n\nexport function getChildMapping(children, mapFn) {\n  var mapper = function mapper(child) {\n    return mapFn && isValidElement(child) ? mapFn(child) : child;\n  };\n\n  var result = Object.create(null);\n  if (children) Children.map(children, function (c) {\n    return c;\n  }).forEach(function (child) {\n    // run the map function here instead so that the key is the computed one\n    result[child.key] = mapper(child);\n  });\n  return result;\n}\n/**\n * When you're adding or removing children some may be added or removed in the\n * same render pass. We want to show *both* since we want to simultaneously\n * animate elements in and out. This function takes a previous set of keys\n * and a new set of keys and merges them with its best guess of the correct\n * ordering. In the future we may expose some of the utilities in\n * ReactMultiChild to make this easy, but for now React itself does not\n * directly have this concept of the union of prevChildren and nextChildren\n * so we implement it here.\n *\n * @param {object} prev prev children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @param {object} next next children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @return {object} a key set that contains all keys in `prev` and all keys\n * in `next` in a reasonable order.\n */\n\nexport function mergeChildMappings(prev, next) {\n  prev = prev || {};\n  next = next || {};\n\n  function getValueForKey(key) {\n    return key in next ? next[key] : prev[key];\n  } // For each key of `next`, the list of keys to insert before that key in\n  // the combined list\n\n\n  var nextKeysPending = Object.create(null);\n  var pendingKeys = [];\n\n  for (var prevKey in prev) {\n    if (prevKey in next) {\n      if (pendingKeys.length) {\n        nextKeysPending[prevKey] = pendingKeys;\n        pendingKeys = [];\n      }\n    } else {\n      pendingKeys.push(prevKey);\n    }\n  }\n\n  var i;\n  var childMapping = {};\n\n  for (var nextKey in next) {\n    if (nextKeysPending[nextKey]) {\n      for (i = 0; i < nextKeysPending[nextKey].length; i++) {\n        var pendingNextKey = nextKeysPending[nextKey][i];\n        childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);\n      }\n    }\n\n    childMapping[nextKey] = getValueForKey(nextKey);\n  } // Finally, add the keys which didn't appear before any key in `next`\n\n\n  for (i = 0; i < pendingKeys.length; i++) {\n    childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);\n  }\n\n  return childMapping;\n}\n\nfunction getProp(child, prop, props) {\n  return props[prop] != null ? props[prop] : child.props[prop];\n}\n\nexport function getInitialChildMapping(props, onExited) {\n  return getChildMapping(props.children, function (child) {\n    return cloneElement(child, {\n      onExited: onExited.bind(null, child),\n      in: true,\n      appear: getProp(child, 'appear', props),\n      enter: getProp(child, 'enter', props),\n      exit: getProp(child, 'exit', props)\n    });\n  });\n}\nexport function getNextChildMapping(nextProps, prevChildMapping, onExited) {\n  var nextChildMapping = getChildMapping(nextProps.children);\n  var children = mergeChildMappings(prevChildMapping, nextChildMapping);\n  Object.keys(children).forEach(function (key) {\n    var child = children[key];\n    if (!isValidElement(child)) return;\n    var hasPrev = (key in prevChildMapping);\n    var hasNext = (key in nextChildMapping);\n    var prevChild = prevChildMapping[key];\n    var isLeaving = isValidElement(prevChild) && !prevChild.props.in; // item is new (entering)\n\n    if (hasNext && (!hasPrev || isLeaving)) {\n      // console.log('entering', key)\n      children[key] = cloneElement(child, {\n        onExited: onExited.bind(null, child),\n        in: true,\n        exit: getProp(child, 'exit', nextProps),\n        enter: getProp(child, 'enter', nextProps)\n      });\n    } else if (!hasNext && hasPrev && !isLeaving) {\n      // item is old (exiting)\n      // console.log('leaving', key)\n      children[key] = cloneElement(child, {\n        in: false\n      });\n    } else if (hasNext && hasPrev && isValidElement(prevChild)) {\n      // item hasn't changed transition states\n      // copy over the last transition props;\n      // console.log('unchanged', key)\n      children[key] = cloneElement(child, {\n        onExited: onExited.bind(null, child),\n        in: prevChild.props.in,\n        exit: getProp(child, 'exit', nextProps),\n        enter: getProp(child, 'enter', nextProps)\n      });\n    }\n  });\n  return children;\n}","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport TransitionGroupContext from './TransitionGroupContext';\nimport { getChildMapping, getInitialChildMapping, getNextChildMapping } from './utils/ChildMapping';\n\nvar values = Object.values || function (obj) {\n  return Object.keys(obj).map(function (k) {\n    return obj[k];\n  });\n};\n\nvar defaultProps = {\n  component: 'div',\n  childFactory: function childFactory(child) {\n    return child;\n  }\n};\n/**\n * The `<TransitionGroup>` component manages a set of transition components\n * (`<Transition>` and `<CSSTransition>`) in a list. Like with the transition\n * components, `<TransitionGroup>` is a state machine for managing the mounting\n * and unmounting of components over time.\n *\n * Consider the example below. As items are removed or added to the TodoList the\n * `in` prop is toggled automatically by the `<TransitionGroup>`.\n *\n * Note that `<TransitionGroup>`  does not define any animation behavior!\n * Exactly _how_ a list item animates is up to the individual transition\n * component. This means you can mix and match animations across different list\n * items.\n */\n\nvar TransitionGroup = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(TransitionGroup, _React$Component);\n\n  function TransitionGroup(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n\n    var handleExited = _this.handleExited.bind(_assertThisInitialized(_this)); // Initial children should all be entering, dependent on appear\n\n\n    _this.state = {\n      contextValue: {\n        isMounting: true\n      },\n      handleExited: handleExited,\n      firstRender: true\n    };\n    return _this;\n  }\n\n  var _proto = TransitionGroup.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.mounted = true;\n    this.setState({\n      contextValue: {\n        isMounting: false\n      }\n    });\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.mounted = false;\n  };\n\n  TransitionGroup.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, _ref) {\n    var prevChildMapping = _ref.children,\n        handleExited = _ref.handleExited,\n        firstRender = _ref.firstRender;\n    return {\n      children: firstRender ? getInitialChildMapping(nextProps, handleExited) : getNextChildMapping(nextProps, prevChildMapping, handleExited),\n      firstRender: false\n    };\n  } // node is `undefined` when user provided `nodeRef` prop\n  ;\n\n  _proto.handleExited = function handleExited(child, node) {\n    var currentChildMapping = getChildMapping(this.props.children);\n    if (child.key in currentChildMapping) return;\n\n    if (child.props.onExited) {\n      child.props.onExited(node);\n    }\n\n    if (this.mounted) {\n      this.setState(function (state) {\n        var children = _extends({}, state.children);\n\n        delete children[child.key];\n        return {\n          children: children\n        };\n      });\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        Component = _this$props.component,\n        childFactory = _this$props.childFactory,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"component\", \"childFactory\"]);\n\n    var contextValue = this.state.contextValue;\n    var children = values(this.state.children).map(childFactory);\n    delete props.appear;\n    delete props.enter;\n    delete props.exit;\n\n    if (Component === null) {\n      return /*#__PURE__*/React.createElement(TransitionGroupContext.Provider, {\n        value: contextValue\n      }, children);\n    }\n\n    return /*#__PURE__*/React.createElement(TransitionGroupContext.Provider, {\n      value: contextValue\n    }, /*#__PURE__*/React.createElement(Component, props, children));\n  };\n\n  return TransitionGroup;\n}(React.Component);\n\nTransitionGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * `<TransitionGroup>` renders a `<div>` by default. You can change this\n   * behavior by providing a `component` prop.\n   * If you use React v16+ and would like to avoid a wrapping `<div>` element\n   * you can pass in `component={null}`. This is useful if the wrapping div\n   * borks your css styles.\n   */\n  component: PropTypes.any,\n\n  /**\n   * A set of `<Transition>` components, that are toggled `in` and out as they\n   * leave. the `<TransitionGroup>` will inject specific transition props, so\n   * remember to spread them through if you are wrapping the `<Transition>` as\n   * with our `<Fade>` example.\n   *\n   * While this component is meant for multiple `Transition` or `CSSTransition`\n   * children, sometimes you may want to have a single transition child with\n   * content that you want to be transitioned out and in when you change it\n   * (e.g. routes, images etc.) In that case you can change the `key` prop of\n   * the transition child as you change its content, this will cause\n   * `TransitionGroup` to transition the child out and back in.\n   */\n  children: PropTypes.node,\n\n  /**\n   * A convenience prop that enables or disables appear animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * A convenience prop that enables or disables enter animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * A convenience prop that enables or disables exit animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * You may need to apply reactive updates to a child as it is exiting.\n   * This is generally done by using `cloneElement` however in the case of an exiting\n   * child the element has already been removed and not accessible to the consumer.\n   *\n   * If you do need to update a child as it leaves you can provide a `childFactory`\n   * to wrap every child, even the ones that are leaving.\n   *\n   * @type Function(child: ReactElement) -> ReactElement\n   */\n  childFactory: PropTypes.func\n} : {};\nTransitionGroup.defaultProps = defaultProps;\nexport default TransitionGroup;","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}"],"names":["ConfirmHeaderBlock","_ref","onBack","onClose","_jsxs","NotificationTitleBlock","children","_jsx","RoundedButton","onClick","ChevronLeftIcon","NotificationCancelButton","handleClose","NftDetailsBlock","_ref2","nftItem","t","useTranslation","sdk","useAppSdk","network","useActiveTonNetwork","ListBlock","fullWidth","collection","ListItem","copyToClipboard","formatAddress","address","ListItemPayload","Label","Label1","toShortValue","assetAmount","AssetAmount","asset","TON_ASSET","weiAmount","ConfirmNftView","_estimation$data","_nftItem$previews","_nftItem$dns","recipient","headerBlock","mainButton","multisigTTL","standalone","useAppContext","done","setDone","useState","isActiveMultisig","useIsActiveAccountMultisig","estimation","useNftTransferEstimation","data","api","account","useActiveAccount","accounts","useAccountsState","client","useQueryClient","signerWallet","type","getMultisigSignerInfo","useQuery","QueryKey","estimate","async","Error","payload","multisig","getQueryData","multisigWallet","activeTonWallet","rawAddress","MultisigApi","tonApiV2","getMultisigAccount","accountId","estimateMultisigNFTTransfer","hostWallet","nftAddress","estimateNftTransfer","fee","event","extra","e","notifyError","enabled","mutateAsync","isLoading","error","reset","useSendNft","options","track2","useTransactionAnalytics","checkTouchId","useCheckTouchId","invalidateAccountQueries","useInvalidateActiveWalletQueries","useMutation","console","signerAccount","signer","getSigner","id","walletId","catch","sendMultisigNFTTransfer","ttlSeconds","Number","sendNftTransfer","image","previews","find","item","resolution","handleSubmit","isDone","setTimeout","err","ConfirmViewContext","Provider","value","formState","FullHeightBlock","onSubmit","stopPropagation","preventDefault","Info","Image","src","url","ImageMock","SendingTitle","dns","metadata","name","Title","margin","ConfirmViewDetailsRecipient","ConfirmViewDetailsFee","ConfirmViewDetailsComment","Gap","MayBeMultisigDetalis","ttl","MultisigTransferDetailsStyled","styled","MultisigTransferDetails","_templateObject","_taggedTemplateLiteral","multisigInfo","useActiveMultisigWalletInfo","useActiveMultisigAccountHost","status","signedWallets","threshold","pendingWallets","signers","hostAddress","secondsLeft","SendContent","extension","multisigSettingsRef","useRef","recipientRef","confirmRef","right","setRight","setRecipient","isMultisig","getAccountAsync","useGetToAccount","checkBalanceAsync","isChecking","useMinimalBalance","walletState","useActiveWallet","wallet","AccountsApi","getAccount","checkWalletPositiveBalanceOrDie","onRecipient","setView","backToRecipient","useCallback","undefined","multisigTimeout","setMultisigTimeout","view","processRecipient","toAccount","blockchain","BLOCKCHAIN_NAME","TON","comment","onScan","param","parseTonTransferWithAddress","signature","uiEvents","emit","method","params","nodeRef","confirm","Wrapper","TransitionGroup","childFactory","childFactoryCreator","CSSTransition","classNames","addEndListener","duration","ref","MultisigOrderFormView","val","lifetime","isAnimationProcess","Header","TransferViewHeaderBlock","title","MainButton","RecipientView","isExternalLoading","acceptBlockchains","HeaderBlock","RecipientHeaderBlock","ConfirmViewButtons","ConfirmMainButton","SendNftNotification","setNft","useEffect","handler","on","off","Content","Notification","isOpen","hideButton","backShadow","getChildMapping","mapFn","result","Object","create","Children","map","c","forEach","child","key","isValidElement","mapper","getProp","prop","props","getNextChildMapping","nextProps","prevChildMapping","onExited","nextChildMapping","prev","next","getValueForKey","i","nextKeysPending","pendingKeys","prevKey","length","push","childMapping","nextKey","pendingNextKey","mergeChildMappings","keys","hasPrev","hasNext","prevChild","isLeaving","in","cloneElement","bind","exit","enter","values","obj","k","_React$Component","context","_this","handleExited","call","this","self","ReferenceError","_assertThisInitialized","state","contextValue","isMounting","firstRender","_inheritsLoose","_proto","prototype","componentDidMount","mounted","setState","componentWillUnmount","getDerivedStateFromProps","appear","node","currentChildMapping","_extends","render","_this$props","Component","component","_objectWithoutPropertiesLoose","React","TransitionGroupContext","propTypes","defaultProps"],"sourceRoot":""}