{"version":3,"file":"static/js/823.03a2b56e.chunk.js","mappings":"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","sources":["../../../packages/uikit/dist/components/home/BuyAction.js","../../../packages/uikit/dist/components/home/HomeIcons.js","../../../packages/uikit/dist/components/home/ReceiveAction.js","../../../packages/uikit/dist/components/home/SwapAction.js","../../../packages/uikit/dist/components/home/TonActions.js","../../../packages/uikit/dist/components/transfer/SendActionButton.js","../../../packages/uikit/dist/pages/coin/Jetton.js","../../../packages/uikit/dist/state/ton/tonActivity.js","../../../packages/uikit/dist/pages/coin/Ton.js","../../../packages/uikit/dist/pages/coin/Tron.js","../../../packages/uikit/dist/pages/coin/Coin.js","../../../packages/uikit/dist/state/swap/useSwapAssets.js"],"sourcesContent":["import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { useCallback, useMemo, useState } from 'react';\nimport { useLocation, useNavigate, useSearchParams } from 'react-router-dom';\nimport styled, { css } from 'styled-components';\nimport { useAppContext } from '../../hooks/appContext';\nimport { useAppSdk } from '../../hooks/appSdk';\nimport { useTranslation } from '../../hooks/translation';\nimport { AppRoute, SettingsRoute } from '../../libs/routes';\nimport { useUserCountry } from '../../state/country';\nimport { useTonendpointBuyMethods } from '../../state/tonendpoint';\nimport { ListBlock } from '../List';\nimport { Notification, NotificationCancelButton, NotificationHeader, NotificationHeaderPortal, NotificationTitleBlock } from '../Notification';\nimport { H3, Label2 } from '../Text';\nimport { CommonCountryButton } from '../fields/RoundedButton';\nimport { Action } from './Actions';\nimport { BuyItemNotification } from './BuyItemNotification';\nimport { BuyIcon, SellIcon } from './HomeIcons';\nconst BuyList = ({ items, kind }) => {\n    return (_jsx(ListBlock, { margin: false, children: items\n            .filter(item => !item.disabled)\n            .map(item => (_jsx(BuyItemNotification, { item: item, kind: kind }, item.title))) }));\n};\nconst Block = styled.div `\n    display: flex;\n    flex-direction: column;\n    gap: 16px;\n`;\nconst ActionNotification = ({ item, kind, handleClose }) => {\n    const navigate = useNavigate();\n    const sdk = useAppSdk();\n    const { data: country } = useUserCountry();\n    const { t } = useTranslation();\n    const { config } = useAppContext();\n    return (_jsxs(Block, { children: [_jsx(NotificationHeaderPortal, { children: _jsx(NotificationHeader, { children: _jsxs(NotificationTitleBlock, { children: [_jsx(CommonCountryButton, { country: country, onClick: () => navigate(AppRoute.settings + SettingsRoute.country) }), _jsx(H3, { children: item.title }), _jsx(NotificationCancelButton, { handleClose: handleClose })] }) }) }), _jsx(BuyList, { items: item.items, kind: kind }), _jsx(OtherBlock, { children: _jsx(OtherLink, { onClick: () => config.exchangePostUrl && sdk.openPage(config.exchangePostUrl), children: kind === 'buy'\n                        ? t('exchange_modal_other_ways_to_buy')\n                        : t('exchange_other_ways') }) })] }));\n};\nconst OtherBlock = styled.div `\n    text-align: center;\n\n    ${p => p.theme.displayType === 'full-width' &&\n    css `\n            padding-bottom: 1rem;\n        `}\n`;\nconst OtherLink = styled(Label2) `\n    cursor: pointer;\n    padding: 7.5px 1rem 8.5px;\n    background-color: ${props => props.theme.backgroundContent};\n    transition: background-color 0.1s ease;\n    border-radius: ${props => props.theme.cornerMedium};\n    display: inline-block;\n\n    &:hover {\n        background-color: ${props => props.theme.backgroundHighlighted};\n    }\n`;\nexport const BuyNotification = ({ buy, open, handleClose }) => {\n    const Content = useCallback(() => {\n        if (!open || !buy)\n            return undefined;\n        return _jsx(ActionNotification, { item: buy, kind: \"buy\", handleClose: handleClose });\n    }, [open, buy]);\n    return (_jsx(Notification, { isOpen: open && buy != null, handleClose: handleClose, hideButton: true, children: Content }));\n};\nexport const BuyAction = () => {\n    const { data: buy } = useTonendpointBuyMethods();\n    const location = useLocation();\n    const [searchParams, setSearchParams] = useSearchParams();\n    const open = useMemo(() => {\n        return new URLSearchParams(searchParams).get('buy') === 'open';\n    }, [searchParams, location]);\n    const toggle = useCallback(() => {\n        if (!searchParams.has('buy')) {\n            searchParams.append('buy', 'open');\n        }\n        else {\n            searchParams.delete('buy');\n        }\n        setSearchParams(searchParams, { replace: true });\n    }, [searchParams, setSearchParams]);\n    return (_jsxs(_Fragment, { children: [_jsx(Action, { icon: _jsx(BuyIcon, {}), title: 'wallet_buy', action: toggle }), _jsx(BuyNotification, { buy: buy, open: open, handleClose: toggle })] }));\n};\nexport const SellAction = ({ sell }) => {\n    const [open, setOpen] = useState(false);\n    const Content = useCallback(() => {\n        if (!open || !sell)\n            return undefined;\n        return _jsx(ActionNotification, { item: sell, kind: \"sell\", handleClose: () => setOpen(false) });\n    }, [open, sell]);\n    return (_jsxs(_Fragment, { children: [_jsx(Action, { icon: _jsx(SellIcon, {}), title: 'wallet_sell', action: () => setOpen(true) }), _jsx(Notification, { isOpen: open && sell != null, handleClose: () => setOpen(false), hideButton: true, title: sell?.title, children: Content })] }));\n};\n","import { jsx as _jsx } from \"react/jsx-runtime\";\nexport const BuyIcon = () => {\n    return (_jsx(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", width: \"28\", height: \"28\", viewBox: \"0 0 28 28\", fill: \"none\", children: _jsx(\"path\", { d: \"M14 21.5V14M14 14V6.5M14 14H21.5M14 14H6.5\", stroke: \"currentColor\", strokeWidth: \"3\", strokeLinecap: \"round\", strokeLinejoin: \"round\" }) }));\n};\nexport const SendIcon = () => {\n    return (_jsx(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", width: \"28\", height: \"28\", viewBox: \"0 0 28 28\", fill: \"none\", children: _jsx(\"path\", { d: \"M14 6.5V21.5M14 6.5L7.5 13M14 6.5L20.5 13\", stroke: \"currentColor\", strokeWidth: \"3\", strokeLinecap: \"round\", strokeLinejoin: \"round\" }) }));\n};\nexport const ReceiveIcon = () => {\n    return (_jsx(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", width: \"28\", height: \"28\", viewBox: \"0 0 28 28\", fill: \"none\", children: _jsx(\"path\", { d: \"M14 21.5V6.5M14 21.5L7.5 15M14 21.5L20.5 15\", stroke: \"currentColor\", strokeWidth: \"3\", strokeLinecap: \"round\", strokeLinejoin: \"round\" }) }));\n};\nexport const SellIcon = () => {\n    return (_jsx(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", width: \"28\", height: \"28\", viewBox: \"0 0 28 28\", fill: \"none\", children: _jsx(\"path\", { d: \"M6.5 14H21.5\", stroke: \"currentColor\", strokeWidth: \"3\", strokeLinecap: \"round\", strokeLinejoin: \"round\" }) }));\n};\nexport const GlobalIcon = () => {\n    return (_jsx(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", width: \"28\", height: \"28\", viewBox: \"0 0 28 28\", fill: \"none\", children: _jsx(\"path\", { fillRule: \"evenodd\", clipRule: \"evenodd\", d: \"M18.5847 21.1598C20.5386 19.9058 21.9456 17.8737 22.3681 15.501H19.4692C19.3811 17.5949 19.1011 19.5538 18.5847 21.1598ZM14 25.501C20.3513 25.501 25.5 20.3523 25.5 14.001C25.5 7.6497 20.3513 2.50098 14 2.50098C7.64873 2.50098 2.5 7.6497 2.5 14.001C2.5 20.3523 7.64873 25.501 14 25.501ZM9.4133 6.84347C7.46038 8.09755 6.05426 10.129 5.63193 12.501H8.53073C8.61847 10.4078 8.89762 8.44935 9.4133 6.84347ZM11.5337 12.501C11.6277 10.4632 11.9167 8.71512 12.3786 7.44122C12.9837 5.7724 13.6298 5.50098 14 5.50098C14.3702 5.50098 15.0163 5.7724 15.6214 7.44122C16.0833 8.71512 16.3723 10.4632 16.4663 12.501H11.5337ZM11.5338 15.501C11.6281 17.5383 11.9179 19.2864 12.3802 20.5603C12.9863 22.2303 13.6325 22.501 14 22.501C14.3675 22.501 15.0137 22.2303 15.6198 20.5603C16.0821 19.2864 16.3719 17.5383 16.4662 15.501H11.5338ZM8.53083 15.501C8.61887 17.5949 8.89893 19.5538 9.41533 21.1598C7.46135 19.9058 6.0544 17.8737 5.63193 15.501H8.53083ZM19.4693 12.501C19.3815 10.4078 19.1024 8.44935 18.5867 6.84347C20.5396 8.09754 21.9457 10.129 22.3681 12.501H19.4693Z\", fill: \"currentColor\" }) }));\n};\n","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useAppSdk } from '../../hooks/appSdk';\nimport { Action } from './Actions';\nimport { ReceiveIcon } from './HomeIcons';\nexport const ReceiveAction = ({ chain, jetton }) => {\n    const sdk = useAppSdk();\n    return (_jsx(Action, { icon: _jsx(ReceiveIcon, {}), title: 'wallet_receive', action: () => sdk.uiEvents.emit('receive', { method: 'receive', params: { chain, jetton } }) }));\n};\n","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Action } from './Actions';\nimport { SwapIcon } from '../Icon';\nimport { useSwapMobileNotification } from '../../state/swap/useSwapMobileNotification';\nimport { styled } from 'styled-components';\nimport { useSwapFromAsset } from '../../state/swap/useSwapForm';\nconst SwapIconStyled = styled(SwapIcon) `\n    height: 24px;\n    width: 24px;\n    color: ${p => p.theme.iconPrimary};\n`;\nexport const SwapAction = ({ fromAsset }) => {\n    const [_, setIsOpen] = useSwapMobileNotification();\n    const [__, setFromAsset] = useSwapFromAsset();\n    const onAction = () => {\n        if (fromAsset) {\n            setFromAsset(fromAsset);\n        }\n        setIsOpen(true);\n    };\n    return _jsx(Action, { icon: _jsx(SwapIconStyled, {}), title: 'swap_title', action: onAction });\n};\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { TON_ASSET } from '@tonkeeper/core/dist/entries/crypto/asset/constants';\nimport { useIsActiveWalletWatchOnly } from '../../state/wallet';\nimport { SendAction } from '../transfer/SendActionButton';\nimport { ActionsRow } from './Actions';\nimport { BuyAction } from './BuyAction';\nimport { ReceiveAction } from './ReceiveAction';\nimport { SwapAction } from './SwapAction';\nexport const HomeActions = () => {\n    const isReadOnly = useIsActiveWalletWatchOnly();\n    return (_jsxs(ActionsRow, { children: [_jsx(BuyAction, {}), !isReadOnly && _jsx(SendAction, { asset: \"TON\" }), _jsx(ReceiveAction, {}), !isReadOnly && _jsx(SwapAction, { fromAsset: TON_ASSET })] }));\n};\n","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useAppSdk } from '../../hooks/appSdk';\nimport { Action } from '../home/Actions';\nimport { SendIcon } from '../home/HomeIcons';\nimport { BLOCKCHAIN_NAME } from '@tonkeeper/core/dist/entries/crypto';\nexport const SendAction = ({ asset }) => {\n    const sdk = useAppSdk();\n    return (_jsx(Action, { icon: _jsx(SendIcon, {}), title: 'wallet_send', action: () => sdk.uiEvents.emit('transfer', {\n            method: 'transfer',\n            id: Date.now(),\n            params: {\n                jetton: asset,\n                chain: BLOCKCHAIN_NAME.TON,\n                from: asset === 'TON' ? 'wallet' : 'token'\n            }\n        }) }));\n};\n","import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { useInfiniteQuery } from '@tanstack/react-query';\nimport { Address } from '@ton/core';\nimport { tonAssetAddressToString } from '@tonkeeper/core/dist/entries/crypto/asset/ton-asset';\nimport { AccountsApi } from '@tonkeeper/core/dist/tonApiV2';\nimport { formatDecimals } from '@tonkeeper/core/dist/utils/balance';\nimport { useMemo, useRef } from 'react';\nimport { InnerBody } from '../../components/Body';\nimport { CoinSkeletonPage } from '../../components/Skeleton';\nimport { SubHeader } from '../../components/SubHeader';\nimport { ActivityList } from '../../components/activity/ActivityGroup';\nimport { ActionsRow } from '../../components/home/Actions';\nimport { ReceiveAction } from '../../components/home/ReceiveAction';\nimport { SwapAction } from '../../components/home/SwapAction';\nimport { CoinInfo } from '../../components/jettons/Info';\nimport { SendAction } from '../../components/transfer/SendActionButton';\nimport { useAppContext } from '../../hooks/appContext';\nimport { useFormatBalance } from '../../hooks/balance';\nimport { useFetchNext } from '../../hooks/useFetchNext';\nimport { JettonKey, QueryKey } from '../../libs/queryKey';\nimport { useJettonBalance, useJettonInfo } from '../../state/jetton';\nimport { useFormatFiat, useRate } from '../../state/rates';\nimport { useAllSwapAssets } from '../../state/swap/useSwapAssets';\nimport { useActiveWallet, useIsActiveWalletWatchOnly } from '../../state/wallet';\nconst JettonHistory = ({ balance, innerRef }) => {\n    const { api, standalone } = useAppContext();\n    const wallet = useActiveWallet();\n    const { isFetched, hasNextPage, data, isFetchingNextPage, fetchNextPage } = useInfiniteQuery({\n        queryKey: [balance.walletAddress.address, QueryKey.activity, JettonKey.history],\n        queryFn: ({ pageParam = undefined }) => new AccountsApi(api.tonApiV2).getAccountJettonHistoryByID({\n            accountId: wallet.rawAddress,\n            jettonId: balance.jetton.address,\n            limit: 20,\n            beforeLt: pageParam\n        }),\n        getNextPageParam: lastPage => (lastPage.nextFrom > 0 ? lastPage.nextFrom : undefined)\n    });\n    useFetchNext(hasNextPage, isFetchingNextPage, fetchNextPage, standalone, innerRef);\n    return (_jsx(ActivityList, { isFetched: isFetched, isFetchingNextPage: isFetchingNextPage, tonEvents: data }));\n};\nconst JettonHeader = ({ info, balance }) => {\n    const [amount, address] = useMemo(() => [\n        formatDecimals(balance.balance, info.metadata.decimals),\n        Address.parse(balance.jetton.address).toString()\n    ], [info, balance]);\n    const { data } = useRate(address);\n    const total = useFormatBalance(amount, info.metadata.decimals);\n    const { fiatAmount } = useFormatFiat(data, amount);\n    const { description, image } = info.metadata;\n    return (_jsx(CoinInfo, { amount: total, symbol: info.metadata.symbol, price: fiatAmount, description: description, image: image }));\n};\nexport const JettonContent = ({ jettonAddress }) => {\n    const { data: info } = useJettonInfo(jettonAddress);\n    const { data: balance } = useJettonBalance(jettonAddress);\n    const isReadOnly = useIsActiveWalletWatchOnly();\n    const { data: swapAssets } = useAllSwapAssets();\n    const jettonAddressRaw = Address.parse(jettonAddress).toRawString();\n    const swapAsset = isReadOnly\n        ? undefined\n        : swapAssets?.find(a => tonAssetAddressToString(a.address) === jettonAddressRaw);\n    const ref = useRef(null);\n    if (!info || !balance || !swapAssets) {\n        return _jsx(CoinSkeletonPage, {});\n    }\n    return (_jsxs(_Fragment, { children: [_jsx(SubHeader, { title: info.metadata.name }), _jsxs(InnerBody, { ref: ref, children: [_jsx(JettonHeader, { balance: balance, info: info }), _jsxs(ActionsRow, { children: [!isReadOnly && _jsx(SendAction, { asset: info.metadata.address }), _jsx(ReceiveAction, { jetton: info.metadata.address }), swapAsset && _jsx(SwapAction, { fromAsset: swapAsset })] }), _jsx(JettonHistory, { balance: balance, innerRef: ref })] })] }));\n};\n","const TonActivities = [\n    'TonTransfer',\n    'DepositStake',\n    'WithdrawStake',\n    'WithdrawStakeRequest',\n    'SmartContractExec',\n    'DomainRenew',\n    'AuctionBid'\n];\nexport const seeIfTonTransfer = (action) => {\n    if (TonActivities.includes(action.type)) {\n        return true;\n    }\n    else if (action.type === 'JettonSwap') {\n        return action.jettonSwap?.tonIn != null || action.jettonSwap?.tonOut != null;\n    }\n    else if (action.type === 'ContractDeploy') {\n        if (action.contractDeploy?.interfaces?.includes('wallet')) {\n            return true;\n        }\n    }\n    return false;\n};\nexport const groupAndFilterTonActivityItems = (data) => {\n    return {\n        pages: data.pages.reduce((acc, item) => {\n            const events = item.events.reduce((e, event) => {\n                if (event.actions.some(seeIfTonTransfer)) {\n                    e.push(event);\n                }\n                return e;\n            }, []);\n            if (events.length) {\n                acc.push({ events, nextFrom: 0 });\n            }\n            return acc;\n        }, []),\n        pageParams: []\n    };\n};\n","import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { useInfiniteQuery } from '@tanstack/react-query';\nimport { BLOCKCHAIN_NAME, CryptoCurrency } from '@tonkeeper/core/dist/entries/crypto';\nimport { AccountsApi } from '@tonkeeper/core/dist/tonApiV2';\nimport { formatDecimals } from '@tonkeeper/core/dist/utils/balance';\nimport { useMemo, useRef } from 'react';\nimport { InnerBody } from '../../components/Body';\nimport { CoinSkeletonPage } from '../../components/Skeleton';\nimport { SubHeader } from '../../components/SubHeader';\nimport { ActivityList } from '../../components/activity/ActivityGroup';\nimport { HomeActions } from '../../components/home/TonActions';\nimport { CoinInfo } from '../../components/jettons/Info';\nimport { useAppContext } from '../../hooks/appContext';\nimport { useFormatBalance } from '../../hooks/balance';\nimport { useTranslation } from '../../hooks/translation';\nimport { useFetchNext } from '../../hooks/useFetchNext';\nimport { QueryKey } from '../../libs/queryKey';\nimport { useFormatFiat, useRate } from '../../state/rates';\nimport { groupAndFilterTonActivityItems } from '../../state/ton/tonActivity';\nimport { useActiveWallet, useWalletAccountInfo } from '../../state/wallet';\nconst TonHeader = ({ info: { balance } }) => {\n    const { t } = useTranslation();\n    const amount = useMemo(() => formatDecimals(balance), [balance]);\n    const total = useFormatBalance(amount);\n    const { data } = useRate(CryptoCurrency.TON);\n    const { fiatAmount } = useFormatFiat(data, amount);\n    return (_jsx(CoinInfo, { amount: total, symbol: \"TON\", price: fiatAmount, description: t('Ton_page_description'), image: \"https://wallet.tonkeeper.com/img/toncoin.svg\" }));\n};\nexport const TonPage = () => {\n    const { t } = useTranslation();\n    const ref = useRef(null);\n    const { data: info } = useWalletAccountInfo();\n    const { api, standalone } = useAppContext();\n    const wallet = useActiveWallet();\n    const { fetchNextPage, hasNextPage, isFetchingNextPage, data, isFetched } = useInfiniteQuery({\n        queryKey: [wallet.rawAddress, QueryKey.activity, 'ton'],\n        queryFn: ({ pageParam = undefined }) => new AccountsApi(api.tonApiV2).getAccountEvents({\n            accountId: wallet.rawAddress,\n            limit: 20,\n            beforeLt: pageParam,\n            subjectOnly: true\n        }),\n        getNextPageParam: lastPage => (lastPage.nextFrom > 0 ? lastPage.nextFrom : undefined)\n    });\n    useFetchNext(hasNextPage, isFetchingNextPage, fetchNextPage, standalone, ref);\n    const activity = useMemo(() => {\n        return data ? groupAndFilterTonActivityItems(data) : undefined;\n    }, [data]);\n    if (!info) {\n        return _jsx(CoinSkeletonPage, { activity: 4 });\n    }\n    return (_jsxs(_Fragment, { children: [_jsx(SubHeader, { title: t('Toncoin') }), _jsxs(InnerBody, { ref: ref, children: [_jsx(TonHeader, { info: info }), _jsx(HomeActions, { chain: BLOCKCHAIN_NAME.TON }), _jsx(ActivityList, { isFetched: isFetched, isFetchingNextPage: isFetchingNextPage, tonEvents: activity })] })] }));\n};\n","import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { BLOCKCHAIN_NAME } from '@tonkeeper/core/dist/entries/crypto';\nimport { formatDecimals } from '@tonkeeper/core/dist/utils/balance';\nimport { useEffect, useMemo, useRef } from 'react';\nimport { Route, Routes, useNavigate, useParams } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { InnerBody } from '../../components/Body';\nimport { CoinSkeletonPage } from '../../components/Skeleton';\nimport { SubHeader } from '../../components/SubHeader';\nimport { Body2 } from '../../components/Text';\nimport { ActionsRow } from '../../components/home/Actions';\nimport { ReceiveAction } from '../../components/home/ReceiveAction';\nimport { CoinInfo } from '../../components/jettons/Info';\nimport { SendAction } from '../../components/transfer/SendActionButton';\nimport { useFormatBalance } from '../../hooks/balance';\nimport { AppRoute } from '../../libs/routes';\nimport { useFormatFiat, useRate } from '../../state/rates';\nimport { useTronBalance, useTronWalletState } from '../../state/tron/tron';\nconst TronHeader = ({ tronBalance: { token, weiAmount } }) => {\n    const amount = useMemo(() => formatDecimals(weiAmount, token.decimals), [weiAmount, token]);\n    const total = useFormatBalance(amount, token.decimals);\n    const { data } = useRate(token.symbol);\n    const { fiatAmount } = useFormatFiat(data, amount);\n    return _jsx(CoinInfo, { amount: total, symbol: token.symbol, price: fiatAmount, image: token.image });\n};\nconst TronActivity = ({ tron, innerRef }) => {\n    return null;\n    /*const {\n        standalone,\n        api: { tronApi }\n    } = useAppContext();\n    const { data, isFetched, isFetchingNextPage, hasNextPage, fetchNextPage } = useInfiniteQuery({\n        queryKey: [tron.ownerWalletAddress, wallet.network, QueryKey.tron],\n        queryFn: ({ pageParam = undefined }) =>\n            new TronApi(tronApi).getTransactions({\n                ownerAddress: tron.ownerWalletAddress,\n                fingerprint: pageParam,\n                limit: 100\n            }),\n        getNextPageParam: lastPage => lastPage.fingerprint\n    });\n\n    useFetchNext(hasNextPage, isFetchingNextPage, fetchNextPage, standalone, innerRef);\n\n    return (\n        <ActivityList\n            isFetched={isFetched}\n            isFetchingNextPage={isFetchingNextPage}\n            tronEvents={data}\n        />\n    );*/\n};\nconst Layout = styled.div `\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    line-height: 22px;\n`;\nconst Label = styled(Body2) `\n    color: ${props => props.theme.textSecondary};\n`;\nconst TronAsset = ({ tron }) => {\n    const { address } = useParams();\n    const navigate = useNavigate();\n    const { data: tronBalance, isLoading, isError } = useTronBalance(tron, address);\n    useEffect(() => {\n        if (isError) {\n            navigate(AppRoute.home);\n        }\n    }, [isError]);\n    const ref = useRef(null);\n    if (isLoading || !tronBalance) {\n        return _jsx(CoinSkeletonPage, {});\n    }\n    return (_jsxs(_Fragment, { children: [_jsx(SubHeader, { title: _jsxs(Layout, { children: [_jsx(\"div\", { children: tronBalance.token.name }), _jsx(Label, { children: \"TRC20\" })] }) }), _jsxs(InnerBody, { ref: ref, children: [_jsx(TronHeader, { tronBalance: tronBalance }), _jsxs(ActionsRow, { children: [_jsx(SendAction, { asset: \"TON\" }), _jsx(ReceiveAction, { chain: BLOCKCHAIN_NAME.TRON })] }), _jsx(TronActivity, { tron: tron, innerRef: ref })] })] }));\n};\nexport const TronPage = () => {\n    const navigate = useNavigate();\n    const { data: state, isLoading, isError } = useTronWalletState();\n    useEffect(() => {\n        if (isError) {\n            navigate(AppRoute.home);\n        }\n    }, [isError]);\n    if (isLoading || !state) {\n        return _jsx(CoinSkeletonPage, {});\n    }\n    return (_jsx(Routes, { children: _jsx(Route, { path: \":address\", element: _jsx(TronAsset, { tron: state }) }) }));\n};\n","import { Fragment as _Fragment, jsx as _jsx } from \"react/jsx-runtime\";\nimport { useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { AppRoute } from '../../libs/routes';\nimport { JettonContent } from './Jetton';\nimport { TonPage } from './Ton';\nimport { TronPage } from './Tron';\nconst CoinPage = () => {\n    const navigate = useNavigate();\n    const { name } = useParams();\n    useEffect(() => {\n        if (!name) {\n            navigate(AppRoute.home);\n        }\n    }, [name]);\n    if (!name)\n        return _jsx(_Fragment, {});\n    if (name === 'tron') {\n        return _jsx(TronPage, {});\n    }\n    else if (name === 'ton') {\n        return _jsx(TonPage, {});\n    }\n    else {\n        return _jsx(JettonContent, { jettonAddress: decodeURIComponent(name) });\n    }\n};\nexport default CoinPage;\n","import { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\nimport { Address } from '@ton/core';\nimport { AppKey } from '@tonkeeper/core/dist/Keys';\nimport { BLOCKCHAIN_NAME, CryptoCurrency } from '@tonkeeper/core/dist/entries/crypto';\nimport { AssetAmount } from '@tonkeeper/core/dist/entries/crypto/asset/asset-amount';\nimport { packAssetId } from '@tonkeeper/core/dist/entries/crypto/asset/basic-asset';\nimport { isTon, tonAssetAddressFromString, tonAssetAddressToString } from '@tonkeeper/core/dist/entries/crypto/asset/ton-asset';\nimport { JettonsApi } from '@tonkeeper/core/dist/tonApiV2';\nimport { shiftedDecimals } from '@tonkeeper/core/dist/utils/balance';\nimport { seeIfValidTonAddress } from '@tonkeeper/core/dist/utils/common';\nimport BigNumber from 'bignumber.js';\nimport { useMemo } from 'react';\nimport { useAppContext } from '../../hooks/appContext';\nimport { useAppSdk } from '../../hooks/appSdk';\nimport { atom, useAtom } from '../../libs/atom';\nimport { QueryKey } from '../../libs/queryKey';\nimport { useAssets } from '../home';\nimport { useJettonList } from '../jetton';\nimport { useRate } from '../rates';\nimport { useSwapsConfig } from './useSwapsConfig';\nexport function useAllSwapAssets() {\n    const { swapService } = useSwapsConfig();\n    const { data: customAssets } = useUserCustomSwapAssets();\n    return useQuery({\n        queryKey: [QueryKey.swapAllAssets, customAssets],\n        queryFn: async () => {\n            try {\n                const assets = await swapService.swapAssets();\n                const fetchedAssets = assets\n                    .map(asset => {\n                    const address = asset.address === 'ton' ? 'TON' : Address.parse(asset.address);\n                    return {\n                        id: packAssetId(BLOCKCHAIN_NAME.TON, address),\n                        symbol: asset.symbol,\n                        decimals: asset.decimals,\n                        name: asset.name,\n                        image: asset.image,\n                        blockchain: BLOCKCHAIN_NAME.TON,\n                        address\n                    };\n                })\n                    .filter(asset => !(customAssets || []).some(ca => ca.id === asset.id));\n                return fetchedAssets.concat(customAssets || []);\n            }\n            catch (e) {\n                console.error(e);\n                return [];\n            }\n        },\n        enabled: !!customAssets\n    });\n}\nconst swapTokensFilter = atom('');\nexport function useSwapTokensFilter() {\n    return useAtom(swapTokensFilter);\n}\nexport function useWalletSwapAssets() {\n    const [walletAssetsData] = useAssets();\n    const { data: allAssets } = useAllSwapAssets();\n    const { data: tonRate } = useRate(CryptoCurrency.TON);\n    const { fiat } = useAppContext();\n    return useQuery({\n        queryKey: [QueryKey.swapWalletAssets, allAssets, walletAssetsData, tonRate, fiat],\n        queryFn: async () => {\n            if (!walletAssetsData || !allAssets || !tonRate) {\n                return [];\n            }\n            const assetsAmounts = allAssets.map(asset => {\n                if (isTon(asset.address)) {\n                    return {\n                        assetAmount: new AssetAmount({\n                            asset,\n                            weiAmount: walletAssetsData.ton.info.balance\n                        }),\n                        fiatAmount: shiftedDecimals(new BigNumber(walletAssetsData.ton.info.balance)).multipliedBy(tonRate.prices)\n                    };\n                }\n                const balance = walletAssetsData.ton.jettons.balances.find(j => Address.parse(j.jetton.address).equals(asset.address));\n                return {\n                    assetAmount: new AssetAmount({\n                        asset,\n                        weiAmount: balance?.balance || 0\n                    }),\n                    fiatAmount: shiftedDecimals(new BigNumber(balance?.balance || 0), asset.decimals).multipliedBy(new BigNumber(balance?.price?.prices?.[fiat] || 0))\n                };\n            });\n            assetsAmounts.sort((a, b) => {\n                if (a.fiatAmount.isZero() && b.fiatAmount.isZero()) {\n                    return b.assetAmount.weiAmount.comparedTo(a.assetAmount.weiAmount);\n                }\n                return b.fiatAmount.comparedTo(a.fiatAmount);\n            });\n            return assetsAmounts;\n        },\n        enabled: !!walletAssetsData && !!allAssets && !!tonRate\n    });\n}\nexport const useWalletFilteredSwapAssets = () => {\n    const [filter] = useSwapTokensFilter();\n    const { data: walletSwapAssets } = useWalletSwapAssets();\n    return useMemo(() => {\n        if (!walletSwapAssets) {\n            return undefined;\n        }\n        return walletSwapAssets.filter(swapAsset => {\n            if (!filter) {\n                return true;\n            }\n            if (seeIfValidTonAddress(filter)) {\n                return Address.parse(filter).equals(swapAsset.assetAmount.asset.address);\n            }\n            const upperCaseFilter = filter.toUpperCase();\n            if (swapAsset.assetAmount.asset.symbol.toUpperCase().includes(upperCaseFilter) ||\n                swapAsset.assetAmount.asset.name?.toUpperCase().includes(upperCaseFilter)) {\n                return true;\n            }\n        });\n    }, [filter, walletSwapAssets]);\n};\nexport const useSwapCustomTokenSearch = () => {\n    const [filter] = useSwapTokensFilter();\n    const isAddress = seeIfValidTonAddress(filter);\n    const { api, fiat } = useAppContext();\n    const { data: jettons } = useJettonList();\n    return useQuery({\n        queryKey: [QueryKey.swapCustomToken, filter, jettons, fiat],\n        queryFn: async () => {\n            if (!isAddress) {\n                return null;\n            }\n            try {\n                const address = Address.parse(filter);\n                const response = await new JettonsApi(api.tonApiV2).getJettonInfo({\n                    accountId: address.toRawString()\n                });\n                const tonAsset = {\n                    address,\n                    image: response.metadata.image,\n                    blockchain: BLOCKCHAIN_NAME.TON,\n                    name: response.metadata.name,\n                    symbol: response.metadata.symbol,\n                    decimals: Number(response.metadata.decimals),\n                    id: packAssetId(BLOCKCHAIN_NAME.TON, address)\n                };\n                const jb = jettons?.balances.find(j => Address.parse(j.jetton.address).equals(address));\n                const assetAmount = new AssetAmount({\n                    asset: tonAsset,\n                    weiAmount: jb?.balance || new BigNumber(0)\n                });\n                return {\n                    assetAmount,\n                    fiatAmount: shiftedDecimals(new BigNumber(jb?.balance || 0), tonAsset.decimals).multipliedBy(new BigNumber(jb?.price?.prices?.[fiat] || 0))\n                };\n            }\n            catch (e) {\n                console.error(e);\n                return null;\n            }\n        },\n        enabled: isAddress && !!jettons\n    });\n};\nexport const useUserCustomSwapAssets = () => {\n    const sdk = useAppSdk();\n    return useQuery([AppKey.SWAP_CUSTOM_ASSETS], async () => {\n        const assetsSerialized = await sdk.storage.get(AppKey.SWAP_CUSTOM_ASSETS);\n        return (assetsSerialized?.map(s => ({\n            ...s,\n            blockchain: s.blockchain,\n            address: tonAssetAddressFromString(s.address),\n            id: packAssetId(s.blockchain, s.address)\n        })) || []);\n    });\n};\nexport const useAddUserCustomSwapAsset = () => {\n    const sdk = useAppSdk();\n    const client = useQueryClient();\n    return useMutation(async (asset) => {\n        const current = (await sdk.storage.get(AppKey.SWAP_CUSTOM_ASSETS)) || [];\n        await sdk.storage.set(AppKey.SWAP_CUSTOM_ASSETS, [\n            ...current,\n            { ...asset, address: tonAssetAddressToString(asset.address) }\n        ]);\n        await client.invalidateQueries([AppKey.SWAP_CUSTOM_ASSETS]);\n    });\n};\n"],"names":["BuyList","_ref","items","kind","_jsx","ListBlock","margin","children","filter","item","disabled","map","BuyItemNotification","title","Block","styled","div","_templateObject","_taggedTemplateLiteral","ActionNotification","_ref2","handleClose","navigate","useNavigate","sdk","useAppSdk","data","country","useUserCountry","t","useTranslation","config","useAppContext","_jsxs","NotificationHeaderPortal","NotificationHeader","NotificationTitleBlock","CommonCountryButton","onClick","AppRoute","settings","SettingsRoute","H3","NotificationCancelButton","OtherBlock","OtherLink","exchangePostUrl","openPage","_templateObject2","p","theme","displayType","css","_templateObject3","Label2","_templateObject4","props","backgroundContent","cornerMedium","backgroundHighlighted","BuyNotification","_ref3","buy","open","Content","useCallback","Notification","isOpen","hideButton","BuyAction","useTonendpointBuyMethods","location","useLocation","searchParams","setSearchParams","useSearchParams","useMemo","URLSearchParams","get","toggle","has","delete","append","replace","_Fragment","Action","icon","BuyIcon","action","xmlns","width","height","viewBox","fill","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","SendIcon","ReceiveIcon","ReceiveAction","chain","jetton","uiEvents","emit","method","params","SwapIconStyled","SwapIcon","iconPrimary","SwapAction","fromAsset","_","setIsOpen","useSwapMobileNotification","__","setFromAsset","useSwapFromAsset","onAction","HomeActions","isReadOnly","useIsActiveWalletWatchOnly","ActionsRow","SendAction","asset","TON_ASSET","id","Date","now","BLOCKCHAIN_NAME","TON","from","JettonHistory","balance","innerRef","api","standalone","wallet","useActiveWallet","isFetched","hasNextPage","isFetchingNextPage","fetchNextPage","useInfiniteQuery","queryKey","walletAddress","address","QueryKey","activity","JettonKey","history","queryFn","pageParam","AccountsApi","tonApiV2","getAccountJettonHistoryByID","accountId","rawAddress","jettonId","limit","beforeLt","getNextPageParam","lastPage","nextFrom","undefined","useFetchNext","ActivityList","tonEvents","JettonHeader","info","amount","formatDecimals","metadata","decimals","Address","parse","toString","useRate","total","useFormatBalance","fiatAmount","useFormatFiat","description","image","CoinInfo","symbol","price","JettonContent","_ref4","jettonAddress","useJettonInfo","useJettonBalance","swapAssets","useAllSwapAssets","jettonAddressRaw","toRawString","swapAsset","find","a","tonAssetAddressToString","ref","useRef","SubHeader","name","InnerBody","CoinSkeletonPage","TonActivities","seeIfTonTransfer","includes","type","_action$jettonSwap","jettonSwap","tonIn","_action$jettonSwap2","tonOut","_action$contractDeplo","contractDeploy","interfaces","TonHeader","CryptoCurrency","TonPage","useWalletAccountInfo","getAccountEvents","subjectOnly","pages","reduce","acc","events","e","event","actions","some","push","length","pageParams","groupAndFilterTonActivityItems","TronHeader","tronBalance","token","weiAmount","TronActivity","tron","Layout","Label","Body2","textSecondary","TronAsset","useParams","isLoading","isError","useTronBalance","useEffect","home","TRON","TronPage","state","useTronWalletState","Routes","Route","path","element","CoinPage","decodeURIComponent","swapService","useSwapsConfig","customAssets","useUserCustomSwapAssets","useQuery","swapAllAssets","async","assets","packAssetId","blockchain","ca","concat","console","error","enabled","swapTokensFilter","atom","useSwapTokensFilter","useAtom","useWalletFilteredSwapAssets","walletSwapAssets","walletAssetsData","useAssets","allAssets","tonRate","fiat","swapWalletAssets","assetsAmounts","_balance$price","isTon","assetAmount","AssetAmount","ton","shiftedDecimals","BigNumber","multipliedBy","prices","jettons","balances","j","equals","sort","b","isZero","comparedTo","useWalletSwapAssets","_swapAsset$assetAmoun","seeIfValidTonAddress","upperCaseFilter","toUpperCase","useSwapCustomTokenSearch","isAddress","useJettonList","swapCustomToken","_jb$price","response","JettonsApi","getJettonInfo","tonAsset","Number","jb","AppKey","SWAP_CUSTOM_ASSETS","assetsSerialized","storage","s","tonAssetAddressFromString","useAddUserCustomSwapAsset","client","useQueryClient","useMutation","current","set","invalidateQueries"],"sourceRoot":""}